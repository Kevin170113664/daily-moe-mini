<style lang="less">
  page {
    background: #b3d9ff;
  }

  .image-grid {
    height: 50.5vw;
  }

  .image-left, .image-right {
    width: 49.5vw;
    display: inline-block;
  }

  .image-left {
    margin-right: 0.5vw;
  }

  .image-right {
    margin-left: 0.5vw;
  }

  .image-left > image, .image-right > image {
    width: 49.5vw;
    height: 49.5vw;
  }
</style>

<template>
  <scroll-view scroll-y style="height: 100vh;" bindscrolltolower="loadMorePictures">
    <repeat for="{{bandoriImages}}" key="index" index="index" item="images">
      <view class="image-grid">
        <view class="image-left">
          <image mode="aspectFill" src="{{images[0]}}" @tap="preview({{images[0]}})"/>
        </view>
        <view class="image-right">
          <image mode="aspectFill" src="{{images[1]}}" @tap="preview({{images[1]}})"/>
        </view>
      </view>
    </repeat>
  </scroll-view>
</template>

<script>
  import _ from 'lodash'
  import wepy from 'wepy'
  import {connect} from 'wepy-redux'

  const imageBaseUrl = 'https://hinatsuruai.chinacloudsites.cn/'

  @connect({
    // num(state) {
    //   return state.counter.num
    // }
  })

  export default class Index extends wepy.page {
    data = {
      bandoriImages: [],
      existingImageIds: []
    };

    computed = {};

    methods = {
      loadMorePictures() {
        this.requestCards()
      },
      preview(image) {
        wepy.previewImage({
          current: image,
          urls: _.flatten(this.bandoriImages)
        })
      }
    };

    requestCards() {
      const that = this
      wepy.request({
        method: 'POST',
        url: imageBaseUrl + '/api/public/randomCards',
        data: {
          existingIds: that.existingImageIds
        },
        success: function (res) {
          that.bandoriImages = _.chain(that.bandoriImages).flatten().concat(_.values(res.data)).chunk(2).value()
          that.existingImageIds = _.concat(that.existingImageIds, _.keys(res.data))
          that.$apply()
        }
      })
    }

    onLoad() {
      this.requestCards()
    }

    onUnload() {
      this.bandoriImages = []
      this.existingImageIds = []
    }

    des
  }
</script>
